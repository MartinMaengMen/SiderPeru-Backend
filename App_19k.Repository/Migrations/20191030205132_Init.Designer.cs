// <auto-generated />
using System;
using App_19k.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace App_19k.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191030205132_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("App_19k.Domain.ActividadEconomica", b =>
                {
                    b.Property<int>("ActividadEconomicaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NActividadEconomica");

                    b.Property<int>("ProyectoId");

                    b.HasKey("ActividadEconomicaId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("ActividadEconomicas");
                });

            modelBuilder.Entity("App_19k.Domain.Administrador", b =>
            {
                b.Property<int>("AdministradorId")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<bool?>("FAdminGeneral");

                b.HasKey("AdministradorId");

                b.HasIndex("AdministradorId");

                b.ToTable("Administradores");
            });

            modelBuilder.Entity("App_19k.Domain.Departamento", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NDepartamento");

                    b.HasKey("DepartamentoId");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("App_19k.Domain.DetalleSuministro", b =>
                {
                    b.Property<int>("DetalleSuministroId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumCantidad");

                    b.Property<int>("ProyectoId");

                    b.Property<int>("SuministroId");

                    b.Property<string>("TTipoCantidad");

                    b.HasKey("DetalleSuministroId");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("SuministroId");

                    b.ToTable("DetalleSuministros");
                });

            modelBuilder.Entity("App_19k.Domain.Distribuidor", b =>
                {
                    b.Property<int>("DistribuidorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GrupoDistribuidor");

                    b.Property<string>("NDistribuidor");

                    b.HasKey("DistribuidorId");

                    b.ToTable("Distribuidores");
                });

            modelBuilder.Entity("App_19k.Domain.Distrito", b =>
                {
                    b.Property<int>("DistritoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NDistrito");

                    b.Property<int>("ProvinciaId");

                    b.HasKey("DistritoId");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Distritos");
                });

            modelBuilder.Entity("App_19k.Domain.Entrega", b =>
                {
                    b.Property<int>("EntregaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad");

                    b.Property<DateTime>("DFechaEntrega");

                    b.Property<int>("DetalleSuministroId");

                    b.HasKey("EntregaId");

                    b.HasIndex("DetalleSuministroId");

                    b.ToTable("Entregas");
                });

            modelBuilder.Entity("App_19k.Domain.MarcaProveedor", b =>
                {
                    b.Property<int>("MarcaProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NMarcaProveedor");

                    b.HasKey("MarcaProveedorId");

                    b.ToTable("MarcaProveedores");
                });

            modelBuilder.Entity("App_19k.Domain.NumerosContacto", b =>
                {
                    b.Property<int>("NumerosContactoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreContacto");

                    b.Property<int>("NumComu");

                    b.Property<int>("ProyectoId");

                    b.Property<string>("Tipo_Contacto");

                    b.HasKey("NumerosContactoId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("NumerosContactos");
                });

            modelBuilder.Entity("App_19k.Domain.Provincia", b =>
                {
                    b.Property<int>("ProvinciaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartamentoId");

                    b.Property<string>("NProvincia");

                    b.HasKey("ProvinciaId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("App_19k.Domain.Proyecto", b =>
                {
                    b.Property<int>("ProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DFechaFinalObra");

                    b.Property<DateTime?>("DInicioSuministro");
                    b.Property<DateTime?>("FechaInscripcion");

                    b.Property<int?>("DistritoId");

                    b.Property<DateTime?>("FechaReg");

                    b.Property<string>("GrupoConstructora");

                    b.Property<string>("IdentificadorSider");

                    b.Property<decimal?>("MPrecioSolicitado");

                    b.Property<int?>("MarcaProveedorId");

                    b.Property<string>("NConstructora");

                    b.Property<string>("NProyecto");

                    b.Property<decimal?>("NumAreaTerreno");

                    b.Property<decimal?>("NumAreaTotal");

                    b.Property<string>("NumLicencia");

                    b.Property<int?>("NumTiempoSuministro");

                    b.Property<decimal?>("NumToneladas");

                    b.Property<string>("TDireccion");

                    b.Property<string>("TEstatusProyecto");

                    b.Property<string>("TEstatusSolicitud");

                    b.Property<string>("TRucConstructora");

                    b.Property<string>("TTipoInversion");

                    b.Property<string>("TTipoSolicitud");

                    b.Property<int?>("VendedorId");

                    b.Property<decimal?>("Altitud");

                    b.Property<decimal?>("Latitud");

                    b.Property<string>("ObservacionProyecto");

                    b.HasKey("ProyectoId");

                    b.HasIndex("DistritoId");

                    b.HasIndex("MarcaProveedorId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("App_19k.Domain.Respuesta", b =>
                {
                    b.Property<int>("RespuestaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiasValidez");

                    b.Property<DateTime>("FechaFinalVigenciaPrecio");

                    b.Property<DateTime>("FechaInicioOferta");

                    b.Property<DateTime>("FechaInicioVigenciaPrecio");

                    b.Property<DateTime>("FechaReg");

                    b.Property<decimal>("Flete");

                    b.Property<decimal>("MPrecioAutorizadoBase");

                    b.Property<int>("ProyectoId");

                    b.Property<decimal>("fehab");

                    b.Property<decimal>("preciofehab");

                    b.Property<string>("observaciones");

                    b.HasKey("RespuestaId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("App_19k.Domain.Suministro", b =>
                {
                    b.Property<int>("SuministroId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NSuministro");

                    b.HasKey("SuministroId");

                    b.ToTable("Suministros");
                });

            modelBuilder.Entity("App_19k.Domain.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistribuidorId");

                    b.Property<string>("NUsuario");

                    b.Property<string>("TPassword");

                    b.Property<string>("TUserName");

                    b.HasKey("UsuarioId");

                    b.HasIndex("DistribuidorId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("App_19k.Domain.Vendedor", b =>
            {
                b.Property<int>("VendedorId")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("TDni");

                b.Property<string>("TEstado");

                b.HasKey("VendedorId");

                b.HasIndex("VendedorId");

                b.ToTable("Vendedores");
            });

            modelBuilder.Entity("App_19k.Domain.ActividadEconomica", b =>
                {
                    b.HasOne("App_19k.Domain.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.Administrador", b =>
            {
                b.HasOne("App_19k.Domain.Usuario", "AdministradorNavigation")
                    .WithOne()
                    .HasForeignKey("App_19k.Domain.Administrador", "AdministradorId");
            });

            modelBuilder.Entity("App_19k.Domain.DetalleSuministro", b =>
                {
                    b.HasOne("App_19k.Domain.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("App_19k.Domain.Suministro", "Suministro")
                        .WithMany()
                        .HasForeignKey("SuministroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.Distrito", b =>
                {
                    b.HasOne("App_19k.Domain.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.Entrega", b =>
                {
                    b.HasOne("App_19k.Domain.DetalleSuministro", "DetalleSuministro")
                        .WithMany()
                        .HasForeignKey("DetalleSuministroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.NumerosContacto", b =>
                {
                    b.HasOne("App_19k.Domain.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.Provincia", b =>
                {
                    b.HasOne("App_19k.Domain.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.Proyecto", b =>
                {
                    b.HasOne("App_19k.Domain.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("App_19k.Domain.MarcaProveedor", "MarcaProveedor")
                        .WithMany()
                        .HasForeignKey("MarcaProveedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("App_19k.Domain.Vendedor", "Vendedor")
           .WithMany()
           .HasForeignKey("VendedorId")
           .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.Respuesta", b =>
                {
                    b.HasOne("App_19k.Domain.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.Usuario", b =>
                {
                    b.HasOne("App_19k.Domain.Distribuidor", "ODistribuidor")
                        .WithMany()
                        .HasForeignKey("DistribuidorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App_19k.Domain.Vendedor", b =>
                {
                    b.HasOne("App_19k.Domain.Usuario", "VendedorNavigation")
                        .WithMany()
                        .HasForeignKey("VendedorNavigationUsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
